name: Staging
on:
  pull_request:
  push:
    branches: staging

jobs:
  # format-check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: jidicula/clang-format-action@v4.11.0
  #       with:
  #         clang-format-version: '15'
  #         check-path: 'atlas'

  # static-check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - uses: JacobDomagala/StaticAnalysis@v0.0.5
  #       with:
  #         apt_pckgs: build-essential qt6-base-dev libsqlite3-dev libgl1-mesa-dev libglx-dev qt6-charts-dev qt6-charts-dev

  build-windows:
    if: !(${{github.actor}} == "KJNeko") && !(${{github.actor}} == "towerwatchman")
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: ./.github/actions/build-windows
        with:
          build-release: true
          build-debug: false
          # Swap build-atlas and build-tests once tests are runnable
          build-atlas: true
          # build-tests: true
          version-string: 'pr-test'

      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          name: Atlas-staging-test-windows
          path: ${{github.workspace}}\builds\build-r\bin
          retention-days: 1

  build-windows-self:
    if: ${{github.actor}} == "KJNeko" || ${{github.actor}} == "towerwatchman"
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: ./.github/actions/build-windows
        with:
          build-release: true
          build-debug: false
          # Swap build-atlas and build-tests once tests are runnable
          build-atlas: true
          # build-tests: true
          version-string: 'pr-test'

      #Murder the other one
      #TODO: Figure out how to do this

      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          name: Atlas-staging-test-windows
          path: ${{github.workspace}}\builds\build-r\bin
          retention-days: 1

  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - uses: ./.github/actions/build-linux
        with:
          build-release: true
          build-debug: true
          build-atlas: true
          # To activate once tests are made
          # build-tests: true

      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          name: Atlas-staging-test-linux
          path: ${{github.workspace}}\builds\build-r\bin
          retention-days: 1

# To enable and fixup once tests are able to be ran.
#  test:
#    runs-on: windows-latest
#    needs: build-windows
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Download release
#        uses: actions/download-artifact@v2
#        with:
#          name: Atlas-release-tests
#          path: ${{github.workspace}}\builds\build-r\bin
#
#      - name: Test-Release
#        run: ${{github.workspace}}\builds\build-r\bin\AtlasTESTS.exe

