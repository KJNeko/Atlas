name: Release Nightly
on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          ref: staging

      - name: Version Increment
        id: version
        run: echo "current_version=$(git ls-remote --tags --sort="v:refname"  https://github.com/KJNeko/Atlas.git "v*.*.?" | tail -n1 | sed 's/.*\///; s/\^{}//')" >> $env:GITHUB_ENV
      
      - name: Short Sha ID
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $env:GITHUB_ENV

      - name: Prepare version string
        run: |
          echo "ATLAS_VERSION_STR=${{env.current_version}}-${{ env.sha_short }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
          env

      - uses: ./.github/actions/build-windows
        with:
          build-release: true
          build-debug: false
          build-atlas: true

      - name: Package
        run: |
          env
          cd ${{github.workspace}}
          move ${{github.workspace}}\builds\build-r\bin Atlas-GameManager-Nightly-Release
          7z.exe a -tzip -mm=Deflate -mx=5 ${{github.workspace}}\Atlas-GameManager-${{ env.ATLAS_VERSION_STR }}-windows.zip ${{github.workspace}}\Atlas-GameManager-Nightly-Release

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: true
          tag_name: ${{ env.ATLAS_VERSION_STR }}
          name: ${{ env.ATLAS_VERSION_STR }}
          body: Nightly build of ${{ env.ATLAS_VERSION_STR }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          target_commitish: staging
          files: |
            Atlas-GameManager-${{ env.ATLAS_VERSION_STR }}-Windows.zip
